# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17dTj2QTAPeAAbFBVqLKSoNgrJ4ui63AT
"""

#-------------- FirstStep: creating our dataframe -------------------------------------#

import quandl, math
import numpy as np
import pandas as pd
from sklearn import preprocessing, model_selection, svm #model_selection is the new cross_validation
from sklearn.linear_model import LinearRegression

df = quandl.get("EOD/DIS", authtoken="6va5u4QAQ-tKz5Pq6s9V")

df['Daily_Change'] = (df['Adj_Close'] - df['Adj_Open'])/df['Adj_Open'] * 100.0
#this is how much the stock changes in a period of one day

df['volatility'] = (df['Adj_High'] - df['Adj_Low'])/df['Adj_Low'] * 100.0
#this is a brute definition of volatility

df = df[['Adj_Close', 'Daily_Change', 'volatility', 'Adj_Volume']]
#here we put only what we need in our dataframe

#df.head()

#-------------- SecondStep: creating our labels and features for forecast -------------------------------------#

forecast = 'Adj_Close' #what we want to predict
df.fillna(value=-99999, inplace=True) #NaN data
forecast_out = int(math.ceil(0.01 * len(df))) #this is 11
df['label'] = df[forecast].shift(-forecast_out) # our label: it is our forecast column('Adj_Close') but without the last 11 rows